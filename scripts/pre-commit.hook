#!/bin/bash

ASTYLE_OPTS="--style=linux --indent=spaces=4 --indent-switches --suffix=none --exclude=lib --recursive"
CPPCHECK_OPTS=". -i lib/ --error-exitcode=1 --force"

ASTYLE=$(which astyle)
if [ $? -ne 0 ]; then
    echo "[!] astyle not installed. Unable to check source file format policy." >&2
    exit 1
fi

RETURN=0
git diff --cached --name-status --diff-filter=ACMR |
{
    # Command grouping to workaround subshell issues. When the while loop is
    # finished, the subshell copy is discarded, and the original variable
    # RETURN of the parent hasn't changed properly.
    while read STATUS FILE; do
    if [[ "$FILE" =~ ^.+(c|cpp|h)$ ]]; then
        $ASTYLE $ASTYLE_OPTS < $FILE > $FILE.beautified
        md5sum -b $FILE | { read stdin; echo $stdin.beautified; } | md5sum -c --status -
        if [ $? -ne 0 ]; then
            echo "[!] $FILE does not respect the agreed coding standards." >&2
            RETURN=1
        fi
        rm $FILE.beautified
    fi
    done

    if [ $RETURN -eq 1 ]; then
        echo ""
        echo "Make sure you have run astyle with the 'make astyle'." >&2 
    fi

    exit $RETURN
}

CPPCHECK=$(which cppcheck)
if [ $? -ne 0 ]; then
    echo "[!] cppcheck not installed. Unable to perform static analysis." >&2
    exit 1
fi

# Expected Cppcheck version is 1.90+
# First, Cppcheck 2.x
if [ -z "$($CPPCHECK --version | grep -E '^Cppcheck\s2')" ]; then
    # Second, Cppcheck 1.x
    CPPCHECK_VER=$($CPPCHECK --version | sed -Ee 's/Cppcheck 1.([0-9]+)/\1/;q')
    if [ $CPPCHECK_VER -lt 90 ]; then
        echo "[!] cppcheck version must be at least 1.90." >&2
        echo -e "    Check 'Developer Info' for building Cppcheck from source:\n" \
                "          http://cppcheck.sourceforge.net/devinfo/" >&2
        exit 1
    fi
fi

# Static analysis
$CPPCHECK $CPPCHECK_OPTS >/dev/null
if [ $? -ne 0 ]; then
    RETURN=1
    echo "" >&2
    echo "Fail to pass static analysis." >&2
    echo
fi

exit $RETURN
